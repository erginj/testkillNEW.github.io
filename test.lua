--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj)local bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx=110,50,22,58,62,75,53,20,97,50,53,16,11,33,66,89,69,79,99,39,20,29,41,58,17,92,84,99,67,40,35,38,88,56,73,46,18,82,89,51,72,69,93,64,70,92,13,89,78,15,56 while bj~=77 do if bk<=694 then if bk<=354 then if bk>=189 then if bk<=245 then if bk>=221 then if bk>225 then bk=289 co=table.insert else bx=table.concat bk=245 end else bk=221 bm=string.rep end else if bk<=289 then bk=306 bq=math.ldexp else if bk<348 then ct=(getfenv or function()return _ENV end)bk=354 else bk=400 cm=setmetatable end end end else if bk>=107 then if bk>=124 then if bk>131 then ca=string.gsub bk=189 else cv=string.sub bk=148 end else bk=124 by=string.char end else if bk<63 then bk=71 bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx=nil else do ck=string.byte end bk=107 end end end else if bk<=529 then if bk<=437 then if bk>405 then do ch=type end bk=470 else bk=437 bw=select end else if bk<=470 then cx=(function(bm,bq,bq)if'number'==ch(bm)then return true else return bg end end)bk=488 else if bk>496 then bk=560 cw=math.floor else cb=math.abs bk=529 end end end else if bk>=649 then if bk<=649 then for bg=0,255 do ce[bg]=by(bg);end bk=672 else if bk<685 then cr=cafunction(bg,bm)return ce[cs(bg,16)]end)bk=694 else bz={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,bf,c,12,15,14,},{l,3,0,1,6,7,4,5,10,11,8,r,14,h,12,13,},{3,2,1,0,7,6,5,4,11,v,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,j,5,2,3,0,1,14,15,12,13,10,b,8,9,},{7,6,5,4,3,2,1,m,15,f,13,z,11,10,9,8,},{8,9,10,11,12,13,i,t,0,1,2,3,4,5,6,7,},{q,8,11,10,u,12,15,14,1,0,3,2,5,4,k,6,},{10,11,8,bh,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,w,7,0,1,d,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,e,12,11,10,9,8,7,6,5,4,3,2,1,x,},nil}bk=713 end end else if bk<=560 then bk=584 do cd=(unpack or table.unpack)end else if bk<605 then bk=610 cs=tonumber else ce={}bk=649 end end end end end else if bk<=979 then if bk<=802 then if bk<=732 then if bk>715 then bk=747 cl=(2^52)else bk=732 bu=''end else if bk<=747 then do cn={[0]=1}end bk=766 else if bk<800 then cc=2 bk=802 else for b=1,31 do do cn[b]=cc end cc=(cc*2)end bk=837 end end end else if bk>=917 then if bk>=948 then if bk<974 then bp=function()local b,c,d,e d,c,e,b=ck(cr,bt,(bt+3))bt=(bt+4);return((b*16777216)+(e*65536)+(c*256)+d);end bk=979 else bk=1014 do br=function()local b do b=ck(cr,bt,bt)end bt=(bt+bb);return b;end end end else bt=1 bk=948 end else if bk<=837 then cp=function(b,c,d,e,e)local e,f,h=53,62,23,97,28,96,77,19,70,48,84,11,46,30,79 while e~=39 do if f>=160 then if f<=160 then h=(h-h%1)f=195 else if f<224 then f=226 return h else e=39;end end else if f<=62 then f=108 h=nil else if f<141 then h=bc f=144 else f=160 h=((c/cn[b])%cn[d])end end end end end bk=873 else if bk<889 then ci=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,e=0,1 while b>0 and c>0 do local f,h=b%16,c%16 d=d+bz[f+1][h+1]*e b=(b-f)/16 c=(c-h)/16 e=e*16 end d=d+b*e+c*e return d end)bk=896 else cj=function(b,c,d,e,e)local e e=((b/2^(c-1))%2^((d-1)-(c-1)+1))return(e-e%1);end bk=917 end end end end else if bk>=1190 then if bk<=1258 then if bk>=1229 then if bk<1252 then cg={}bk=1258 else bl={}bk=1283 end else bo=function(b,c)local c,d,e,f,h,i,j,k=78,80,21,97,21,31,24,16,83,71,28,16,23,12,39,85,70,96,21,51,13,94,25 while c~=36 do if d>=352 then if d<=450 then if d<=384 then if d<378 then for l=1,bp()do f[l-1]=bo();end d=384 else d=406 j[o]=f;end else if d>409 then do i=bp()end d=465 else d=450 j[134]=br();end end else if d>=539 then if d<=539 then d=588 j[174]=e else if d>591 then c=36;else d=607 return j;end end else if d<495 then e={}d=499 else for c=1,i do local l,m,o,q=67,58,86,11,28,42,11,57,92,10,72,11,30 while l~=44 do if m>=144 then if m<=144 then m=180 if(2==q)then do o=(not(br()==0));end elseif(not(q~=3))then do o=cf();end elseif(not(q~=0))then o=bv();elseif(not(q~=4))then do o=b[bv()];end end;else if m<210 then m=219 e[c]=o;else break end end else if m>=79 then if m>83 then m=144 o=nil else m=124 do q=br()end end else m=79 o,q=nil end end end end d=539 end end end else if d<=186 then if d<=125 then if d>83 then d=150 k={}else e,f,h,i,j,k=nil d=125 end else if d>157 then d=216 j={}else f={}d=186 end end else if d<=259 then if d>222 then for b=(#cu+1),(#cu+h)do local c,e,f,i,l=88,42,23,91,41,90,16,44,35,41,37,35,86,98,99,75,81,52,20,60,41,66,19,70 while c~=45 do if e>=257 then if e>=422 then if e<=468 then if e>424 then f[169]=-f[149]e=490 else e=468 do f[138]=-f[79]end end else if e>499 then c=45;else e=509 cu[b]=f;end end else if e>=343 then if e<373 then e=381 do f[149]=cj(l,21,29);end else f[139]=cj(i,12,33);e=422 end else if e>264 then do f[163]=cj(l,12,20);end e=343 else e=297 f[79]=cj(l,3,11);end end end else if e<=114 then if e<=71 then if e>51 then f={}e=90 else e=71 f,i,l=nil end else if e<112 then e=114 f[31]=br();else l=bp()e=139 end end else if e<=178 then if e>142 then e=203 f[60]=br();else e=178 i=bp()end else if e<237 then f[14]=cj(l,1,2);e=242 else f[97]=cj(i,1,11);e=257 end end end end end end d=283 else h=bp()d=259 end else if d>292 then j[172]=k;d=352 else d=320 for b=1,bp()do local c,d,e,f,h,i=79,69,65,63,39,12,27,13,73,53,98,16,85,95,96,10,25,57,18,21,60,73,34,61,39 while c~=44 do if d<=332 then if d<=180 then if d<=100 then if d>77 then d=138 do e={{},nil,nil}end else e,f,h,i=nil d=100 end else if d<178 then e[31]=br();d=180 else e[6]={};d=204 end end else if d<=224 then if d<216 then if 1==br()then do for j=1,br()do e[6][j]={br()==0,bp()}end end end d=224 else d=262 f=bp()end else if d<=262 then do i=bp()end d=309 else if d>311 then e[14]=h d=379 else d=332 h=cj(f,1,2)end end end end else if d>=466 then if d>=523 then if d<=523 then e[169]=-e[149]d=539 else if d<553 then d=558 k[b]=e;else c=44;end end else if d<488 then d=491 e[60]=cj(f,bd,20);else e[138]=-e[79]d=523 end end else if d>=420 then if d<430 then d=438 e[139]=cj(i,12,33);else e[149]=cj(f,21,29);d=466 end else if d<398 then d=403 e[97]=cj(i,1,11);else d=420 e[79]=cj(f,3,a);end end end end end end end end end end end end bk=1229 end else if bk>=1324 then if bk>1326 then bj=77;else bk=1354 return cq(bo(ct()),{},ct())();end else bk=1324 cq=function(a,b,c,d)local d,e,f,h,i h=cg e=a[135]d=a[172]i=a[134]f=a[174]return function(...)local a,h,j,k,l,m,o,q,r r=1 o=-1 k=-1 q={}h={...}m=(bw('#',...)-s)l={}a={}do for k=ba,m do if(not(k<i))then q[(k-i)]=h[(k+1)];else a[k]=h[(k+1)];end;end;end j=(m-i+1)while true do local h,i,j,k,m,q,s,t,u,v u=d[r]s=u[97]i=u[31]m=u[79]v=u[163]h=u[149]k=u[60]t=u[138]do j=u[139]end q=u[169]if not(s>31)then do if not(s>15)then if not(s<8)then if not(s<12)then if not(u[97]<14)then do if(s<15)then local d,i i=m do d=a[j]end a[(i+1)]=d;a[i]=d[f[h]];else a[m]=a[j];end end else if(s<13)then a[m]=b[j];else local d,i,k,q k=m i,q=bn(a[k](a[(k+1)]))o=(q+k-1)do d=0 end do for q=k,o do d=(d+1);a[q]=i[d];end;end end end else if not(s>9)then if(s<9)then a[m]=f[j]else local d,i,k k=m i=a[(k+2)]do d=(a[k]+i)end a[k]=d;if((i>0))then if(not(d>a[k+1]))then r=j;a[(k+3)]=d;end elseif(not(d<a[k+1]))then r=j;a[(k+g)]=d;end end else if(s<11)then local d,g,i d=u[79]g={a[d](cd(a,d+1,o))}i=0 for k=d,h do i=(i+1);a[k]=g[i];end else a[m]=(a[j]*a[h]);end end end else if not(s<4)then do if not(s<6)then if(s<7)then a[m]();else a[u[79]]=(a[j]%f[h]);end else do if(s<5)then a[m]=(a[j]-a[h]);else local d,g,i,k g=m d,i=bn(a[g](cd(a,(g+1),u[139])))o=(i+g-1)k=0 for i=g,o do k=(k+1);a[i]=d[k];end;end end end end else if not(s>1)then do if(s<1)then a[m]=nil;else a[m]=(a[j]/a[h]);end end else if not(s~=2)then a[u[79]]=(0~=j);r=(r+1);else if a[h]then do a[m]=a[h];end r=j;end;end end end end else if not(u[97]<24)then if not(s<28)then if not(s>29)then if(s>28)then do return a[m]end else a[m]=a[j][a[h]];end else if(s<31)then a[m][a[u[139]]]=f[h];else local d,g g=m d={}if(#l>0)then for i=1,#l do local k k=l[i]do for i=0,#k do local q,t,v t=k[i]v=t[1]q=t[2]do if(v==a and q>=0)then do d[q]=v[q]end t[1]=d end end end end end end return cd(a,g,o);end end else if not(s<26)then do if(s>26)then local d,g,i i=m g=a[i]d=a[(i+2)]if((d>0))then if((g>a[i+1]))then r=u[139];else a[(i+3)]=g;end elseif((g<a[i+1]))then r=j;else a[(i+3)]=g;end else a[m]=(not a[j]);end end else if(s>24)then a[m]=(a[u[139]]/f[h]);else do f=cg[u[79]](f)end end end end else if not(s<20)then if not(u[97]<22)then if(s<23)then if(f[h]==a[m])then do r=j;end end;else a[m][a[j]]=a[h];end else if(s<21)then a[m][f[j]]=a[h];else do a[m]={};end end end else if not(s<18)then if(s<19)then r=j;else do if((f[m]<a[h]))then r=j;end;end end else if not(s~=16)then a[m]=(a[j]+a[h]);else if(not(a[m]==a[h]))then r=j;end;end end end end end end else do if not(u[97]>47)then if not(u[97]>39)then if not(s<36)then do if not(s>37)then if(s<37)then local d d=m a[d]=a[d]();else a[m]=(not(u[139]==0));end else if(s>38)then local d,g,i g=m d=a[g]i=j do for k=1,i do d[k]=a[(g+k)]end;end else local d,g,i g=m d={a[g](a[g+1])}i=0 for k=g,u[149]do i=(i+1);a[k]=d[i];end end end end else if not(s>33)then if 32==u[97]then a[m]=(a[j]+f[h]);else a[m][f[j]]=f[u[149]];end else if 34==u[p]then local d,g,i i=e[j]do d=nil end g={}d=cm({},{__index=function(k,k)local k=g[k];return k[1][k[2]];end,__newindex=function(k,k,p)local k=g[k]k[1][k[2]]=p;end;});for k=1,h do local p p=u[6][k]do if p[1]then g[(k-1)]={a,p[2],nil,nil};else do g[(k-1)]={b,p[2],nil,nil};end end;end l[(#l+1)]=g;end;a[m]=cq(i,d,c);else local d,g,i,k k=m i=((h-bi)*50)g=a[k]do d=(o-k)end do for p=1,d do do g[(i+p)]=a[(k+p)]end end;end end end end else if not(u[97]>43)then if not(s<42)then if 42==s then local d do d=m end a[d]=a[d](a[d+1]);else local d d=u[79]do do return a[d](cd(a,(d+1),o))end end;end else if not(s~=y)then local d d=m a[d](cd(a,(d+1),j))else if(a[h]==a[u[79]])then r=j;end;end end else if not(s<46)then if(s>46)then do a[m]=cq(e[j],nil,c);end else local d d={}if(#l>0)then do for e=1,#l do local g g=l[e]for e=0,#g do local i,k,l do k=g[e]end do i=k[1]end l=k[2]if(i==a and l>=0)then do d[l]=i[l]end k[1]=d end end end end end do return a[u[79]],u[u[163]];end end else if(s<45)then local d,e,g,i,k e=m d=h k=(e+2)g={a[e](a[e+1],a[k])}for l=1,d do a[(k+l)]=g[l]end i=a[(e+3)]if i then a[k]=i else r=j;end;else a[u[be]]=(a[j]*f[h]);end end end end else if not(s>55)then if not(s>51)then if not(s<50)then do if not(s~=50)then local d d=m a[d]=a[d](cd(a,d+1,j));else local d d=m a[d](cd(a,(d+1),o))end end else if not(s~=48)then while(a[m]<=a[h])do r=j;break end elseif(not(a[m]<a[h]))then r=j;end end else do if not(s<54)then if(s>54)then do if(not(a[m]==f[h]))then r=j;end;end else local d,e do d=u[139]end e=a[d]for g=(d+1),h do e=(e..a[g]);end;a[m]=e;end else if 52==s then local d,e,g e=m g=a[e]d=(o-e)for i=n,d do g[i]=a[(e+i)]end;else a[m]=#a[j];end end end end else if not(s<60)then if not(s<62)then if not(u[97]<63)then if(s<64)then a[m]=c[f[j]];else local c do c=m end a[c]=a[c](cd(a,c+1,o));end else local c c=u[79]a[c](a[(c+1)])end else if(s>60)then if((a[m]<a[h]))then r=j;end;else b[j]=a[u[79]];end end else if not(s<58)then do if(s>58)then a[m]=a[j][f[h]];elseif not a[m]then r=j;end end else if not(s~=56)then if a[m]then r=j;end;else do a[m]=-a[j];end end end end end end end end r=(r+1);end;end;end end end else if bk<=1048 then if bk<1046 then bk=1048 bs=function()local a,b a,b=ck(cr,bt,(bt+2))bt=(bt+2);do return((b*256)+a);end end else bk=1095 do cf=function()local a,b,c,d,e,f,g,h=76,74,87,58,80,16,70,92,25,72,25,66,32,98,78,35,51,51,53 while a~=40 do if b>=263 then if b<=352 then if b>=303 then if b<346 then b=352 c=(cp(0,e,20)*4294967296+f)else d=1 b=371 end else b=303 h=cp(20,e,11)end else if b>=406 then if b<449 then b=455 return(g*(2^(h-1023))*(c/cl+d))else a=40;end else do if 0==h then if not(c==0)then h=1 d=0 else return(g*0)end elseif not(h==2047)then else do if 0==c then do return(g*(0/0))end else return(g*(1/0))end end end end b=406 end end else if b>=156 then if b>=184 then if b>189 then g=((-1)^cp(31,e,1))b=263 else b=216 while((f==0 and e==0))do return 0 end end else e=bp()b=184 end else if b>76 then b=156 f=bp()else c,d,e,f,g,h=nil b=108 end end end end end end end else if bk>=1142 then if bk<1166 then bk=1172 bn=function(...)return{...},bw('#',...)end else bk=1190 cu={}end else bv=function(a,a)local a,b,c,d=78,55,34,55,59,37,52,33,16,52,16,74,10,51 while a~=33 do if b>=155 then if b<=155 then b=186 bt=(bt+c);else if b<209 then b=216 return d;else break end end else if b<=55 then c,d=nil b=90 else if b>99 then b=155 d=cr:sub(bt,(bt+c-1))else b=113 c=bp()end end end end end bk=1142 end end end end end end end)(11,11,13,2,13,14,3,15,14,4,7,2,0,1,135,97,9,9,1,15,13,10,6,0,40,12,0,1,nil,12,79,10,false,9,1)
